/*! ---------------------------------------------------
    LESS Elements 0.8

    Created by:
    - Dmitry Fadeyev -> http://lesselements.com/

    Edited by:
    - Oreolek -> http://oreolek.ru
    - frozeman -> frozeman.de
  ---------------------------------------------------
    A set of useful LESS mixins.
    See CREDITS file for full author list.

    More info at: http://lesselements.com
-----------------------------------------------------*/

#gradient {
  .vertical(@color: #F5F5F5, @start: #EEE, @stop: #FFF, @posStart: 0, @posEnd: 1) {
    background: @color;
    background: -webkit-gradient(linear,
                   left bottom,
                   left top,
                   color-stop(@posStart, @start),
                   color-stop(@posEnd, @stop));
    background: -moz-linear-gradient(center bottom,
                     @start @posStart*100%,
                     @stop @posEnd*100%);
    background: -ms-linear-gradient(bottom, @start @posStart*100%,@stop @posEnd*100%);
    filter: ~"progid:DXImageTransform.Microsoft.gradient( startColorstr='@{stop}', endColorstr='@{start}',GradientType=0)";
  }
  .horizontal(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
    background: @color;
    background-image: linear-gradient(right , @stop 0%, @start 100%);
    background-image: -o-linear-gradient(right , @stop 0%, @start 100%);
    background-image: -moz-linear-gradient(right , @stop 0%, @start 100%);
    background-image: -webkit-linear-gradient(right , @stop 0%, @start 100%);
    background-image: -ms-linear-gradient(right , @stop 0%, @start 100%);
    background-image: -webkit-gradient(
      linear,
      right top,
      left top,
      color-stop(0, @stop),
      color-stop(0.5, @start)
    );
    background: -ms-linear-gradient(left, @start 0%,@stop 100%);
    filter: ~"progid:DXImageTransform.Microsoft.gradient( startColorstr='@{stop}', endColorstr='@{start}',GradientType=1)";
  }
  .radial(@color: #F5F5F5, @start: #EEE, @stop: #FFF, @position: center) {
    background: @color;
    background-image: -moz-radial-gradient(@position, ellipse cover,  @stop 0%, @start 100%);
    background-image: -webkit-gradient(radial, @position @position, 0px, @position @position, 100%, color-stop(0%,@stop), color-stop(100%,@start));
    background-image: -webkit-radial-gradient(@position, ellipse cover,  @start 0%,@stop 100%);
    background-image: -o-radial-gradient(@position, ellipse cover,  @start 0%,@stop 100%);
    background-image: -ms-radial-gradient(@position, ellipse cover,  @start 0%,@stop 100%);
    background-image: radial-gradient(ellipse at @position,  @start 0%,@stop 100%);
    filter: ~"progid:DXImageTransform.Microsoft.gradient( startColorstr='@{stop}', endColorstr='@{start}',GradientType=0)"; // is just a vertical gradient
  }
  .bw(@color: #F5F5F5, @start: 0, @stop: 255) {
    background: @color;
    background: -webkit-gradient(linear,
                   left bottom,
                   left top,
                   color-stop(0, rgb(@start,@start,@start)),
                   color-stop(1, rgb(@stop,@stop,@stop)));
    background: -ms-linear-gradient(bottom,
                    rgb(@start,@start,@start) 0%,
                    rgb(@start,@start,@start) 100%);
    background: -moz-linear-gradient(center bottom,
                     rgb(@start,@start,@start) 0%,
                     rgb(@stop,@stop,@stop) 100%);
  }
  .none(){
    background:none;
    filter:none;
  }

}

#border {
  .bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
    border-top: solid 1px @top-color;
    border-left: solid 1px @left-color;
    border-right: solid 1px @right-color;
    border-bottom: solid 1px @bottom-color;
  }
  .rounded(@radius: 2px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
    -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
  }

  .radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
    -webkit-border-top-right-radius: @topright;
    -webkit-border-bottom-right-radius: @bottomright;
    -webkit-border-bottom-left-radius: @bottomleft;
    -webkit-border-top-left-radius: @topleft;
    -moz-border-radius-topright: @topright;
    -moz-border-radius-bottomright: @bottomright;
    -moz-border-radius-bottomleft: @bottomleft;
    -moz-border-radius-topleft: @topleft;
    border-top-right-radius: @topright;
    border-bottom-right-radius: @bottomright;
    border-bottom-left-radius: @bottomleft;
    border-top-left-radius: @topleft;
    -moz-background-clip: padding; -webkit-background-clip: padding-box; background-clip: padding-box;
  }
}

#shadow {
  .drop(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1, @color: #000) {
    -webkit-box-shadow: @x-axis @y-axis @blur fadeout(@color, 100-(@alpha*100));
    -moz-box-shadow: @x-axis @y-axis @blur fadeout(@color, 100-(@alpha*100));
    -o-box-shadow: @x-axis @y-axis @blur fadeout(@color, 100-(@alpha*100));
    box-shadow: @x-axis @y-axis @blur fadeout(@color, 100-(@alpha*100));
  }
  .inner(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4, @color: #000) {
    -webkit-box-shadow: inset @horizontal @vertical @blur fadeout(@color, 100-(@alpha*100));
    -moz-box-shadow: inset @horizontal @vertical @blur fadeout(@color, 100-(@alpha*100));
    -o-box-shadow: inset @horizontal @vertical @blur fadeout(@color, 100-(@alpha*100));
    box-shadow: inset @horizontal @vertical @blur fadeout(@color, 100-(@alpha*100));
  }
  .both(@horizontalOut:0, @verticalOut:1px, @blurOut:2px, @alphaOut: 0.4, @colorOut: #000,@horizontalIn:0, @verticalIn:1px, @blurIn:2px, @alphaIn: 0.4, @colorIn: #000) {
    -webkit-box-shadow: @horizontalOut @verticalOut @blurOut fadeout(@colorOut, 100-(@alphaOut*100)), inset @horizontalIn @verticalIn @blurIn fadeout(@colorIn, 100-(@alphaIn*100));
    -moz-box-shadow: @horizontalOut @verticalOut @blurOut fadeout(@colorOut, 100-(@alphaOut*100)), inset @horizontalIn @verticalIn @blurIn fadeout(@colorIn, 100-(@alphaIn*100));
    -o-box-shadow: @horizontalOut @verticalOut @blurOut fadeout(@colorOut, 100-(@alphaOut*100)), inset @horizontalIn @verticalIn @blurIn fadeout(@colorIn, 100-(@alphaIn*100));
    box-shadow: @horizontalOut @verticalOut @blurOut fadeout(@colorOut, 100-(@alphaOut*100)), inset @horizontalIn @verticalIn @blurIn fadeout(@colorIn, 100-(@alphaIn*100));
  }
  .box(@arguments) {
    -webkit-box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    -o-box-shadow: @arguments;
    box-shadow: @arguments;
  }
  .text(@arguments) {
    -webkit-text-shadow: @arguments;
    -moz-text-shadow: @arguments;
    -ms-text-shadow: @arguments;
    -o-text-shadow: @arguments;
    -khtml-text-shadow: @arguments;
    text-shadow: @arguments;
  }
  .textInset(@arguments, @color: #999) {
    background-color: @color;
    color: transparent;
    -webkit-text-shadow: @arguments;
    -moz-text-shadow: @arguments;
    -ms-text-shadow: @arguments;
    -o-text-shadow: @arguments;
    -khtml-text-shadow: @arguments;
    text-shadow: @arguments;
    -webkit-background-clip: text;
    -moz-background-clip: text;
    -o-background-clip: text;
    -ms-background-clip: text;
    background-clip: text;
  }
  .none() {
    -webkit-box-shadow: none;
    -moz-box-shadow: none;
    -o-box-shadow: none;
    box-shadow: none;
  }
}

#transform {
  .rotate(@deg:5deg){
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -o-transform: rotate(@deg);
    -ms-transform: rotate(@deg);
    transform: rotate(@deg);
  }
  .scale(@ratio:1.5){
    -webkit-transform:scale(@ratio);
    -moz-transform:scale(@ratio);
    -o-transform:scale(@ratio);
    transform:scale(@ratio);
  }
  .scale(@ratioX:1.5,@ratioY:1.5){
    -webkit-transform:scale(@ratioX,@ratioY);
    -moz-transform:scale(@ratioX,@ratioY);
    -o-transform:scale(@ratioX,@ratioY);
    transform:scale(@ratioX,@ratioY);
  }
  .translate(@x:0, @y:0) {
    -moz-transform: translate(@x, @y);
    -webkit-transform: translate(@x, @y);
    -o-transform: translate(@x, @y);
    -ms-transform: translate(@x, @y);
    transform: translate(@x, @y);
  }
  .opacity(@opacity: 0.5) {
    @percent: @opacity * 100;
    -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{percent})";
    filter: ~"alpha(opacity=@{percent})";
    -ms-opacity: @opacity;
    -moz-opacity: @opacity;
    -khtml-opacity: @opacity;
    -webkit-opacity: @opacity;
    opacity: @opacity;
  }
  .origin(@origin) {
    -webkit-transform-origin: @origin;
    -moz-transform-origin: @origin;
    -o-transform-origin: @origin;
    -ms-transform-origin: @origin;
    transform-origin: @origin;
  }
}

#3Dtransform {
  .perspective(@perspective: 600px) {
    -webkit-perspective: @perspective;
    -moz-perspective: @perspective;
    -o-perspective: @perspective;
    perspective: @perspective;
  }
  .transform(@transform: rotateX(180deg)) {
    -webkit-transform: @transform;
    -moz-transform: @transform;
    -o-transform: @transform;
    transform: @transform;
  }
  .animation-timing-function(@transition: ease-in-out) {
    -webkit-animation-timing-function: @transition;
    -moz-animation-timing-function: @transition;
    -o-animation-timing-function: @transition;
    animation-timing-function: @transition;
  }
  .animation(@duration: 2s,@iteration: 1,@name: none) {
    -webkit-animation-duration: @duration;
    -webkit-animation-iteration-count: @iteration;
    -webkit-animation-name: @name;
    -moz-animation-duration: @duration;
    -moz-animation-iteration-count: @iteration;
    -moz-animation-name: @name;
    -o-animation-duration: @duration;
    -o-animation-iteration-count: @iteration;
    -o-animation-name: @name;
    animation-duration: @duration;
    animation-iteration-count: @iteration;
    animation-name: @name;
  }
}

#transition {
  .all(@duration:0.2s, @ease:ease-out) {
    -webkit-transition: all @duration @ease;
    -moz-transition: all @duration @ease;
    -o-transition: all @duration @ease;
    -ms-transition: all @duration @ease;
    transition: all @duration @ease;
  }
  .property(@property: width,@delay: 200ms, @ease:ease-out){
    -moz-transition: @property @delay @ease;
    -webkit-transition: @property @delay @ease;
    -o-transition: @property @delay @ease;
    -ms-transition: @property @delay @ease;
    transition: @property @delay @ease;
  }
  .duration(@duration: 0.2s) {
    -moz-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    -o-transition-duration: @duration;
    -ms-transition-duration: @duration;
    transition-duration: @duration;
  }
}

#filter {
  .blur(@blur: 1px) {
    -webkit-filter: blur(@blur);
    -moz-filter: blur(@blur);
    -ms-filter: blur(@blur);
    -o-filter: blur(@blur);
    filter: blur(@blur);
  }
  .none() {
    -webkit-filter: none;
    -moz-filter: none;
    -ms-filter: none;
    -o-filter: none;
    filter: none;
  }
}

#content {
  .columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
    -moz-column-width: @colwidth;
    -moz-column-count: @colcount;
    -moz-column-gap: @colgap;
    -moz-column-rule-color: @columnRuleColor;
    -moz-column-rule-style: @columnRuleStyle;
    -moz-column-rule-width: @columnRuleWidth;
    -webkit-column-width: @colwidth;
    -webkit-column-count: @colcount;
    -webkit-column-gap: @colgap;
    -webkit-column-rule-color: @columnRuleColor;
    -webkit-column-rule-style: @columnRuleStyle;
    -webkit-column-rule-width: @columnRuleWidth;
    column-width: @colwidth;
    column-count: @colcount;
    column-gap: @colgap;
    column-rule-color: @columnRuleColor;
    column-rule-style: @columnRuleStyle;
    column-rule-width: @columnRuleWidth;
  }
  .noTextSelection {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  .truncateText {
    overflow: hidden;
    white-space: nowrap;
    -webkit-text-overflow: ellipsis;
    -moz-text-overflow: ellipsis;
    -o-text-overflow: ellipsis;
    text-overflow: ellipsis;
  }
}